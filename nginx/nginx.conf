# Upstream for the Next.js frontend service
# The name 'frontend' must match the service name in docker-compose.yml
upstream frontend {
    server frontend:3000;
}

# Upstream for the Django backend service (Daphne)
# The name 'backend' must match the service name in docker-compose.yml
upstream backend {
    server backend:8000;
}

# Server block for redirecting HTTP to HTTPS for the frontend
server {
    listen 80;
    server_name ovii.it.com;
    # Tell Certbot this is the server to use for challenges
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block for the frontend application (HTTPS)
server {
    listen 443 ssl;
    server_name ovii.it.com;

    # SSL configuration - replace with your actual certificate paths
    # You can generate these for free using Certbot
    ssl_certificate /etc/letsencrypt/live/ovii.it.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ovii.it.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";
    }
}

# Server block for redirecting HTTP to HTTPS for the backend
server {
    listen 80;
    server_name admin.ovii.it.com api.ovii.it.com;
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

# Server block for the backend API and Admin (HTTPS)
server {
    listen 443 ssl;
    server_name admin.ovii.it.com api.ovii.it.com;

    # SSL configuration - replace with your actual certificate paths
    ssl_certificate /etc/letsencrypt/live/ovii.it.com/fullchain.pem; # Assumes one cert for all subdomains
    ssl_certificate_key /etc/letsencrypt/live/ovii.it.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Increase max upload size (e.g., to 10MB)
    client_max_body_size 10M;

    # Serve static files directly from Nginx
    # The path must match the volume mount for your Django staticfiles
    location /static/ {
        alias /home/app/web/staticfiles/;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Serve media files directly from Nginx
    # The path must match the volume mount for your Django mediafiles
    location /media/ {
        alias /home/app/web/mediafiles/;
        expires 30d;
        add_header Cache-Control "public";
    }

    location / {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Content-Type-Options "nosniff";
        add_header X-Frame-Options "SAMEORIGIN";

        # WebSocket support for Django Channels / Daphne
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
